// Code generated by capnpc-go. DO NOT EDIT.

package pex

import (
	capnp "capnproto.org/go/capnp/v3"
	text "capnproto.org/go/capnp/v3/encoding/text"
	schemas "capnproto.org/go/capnp/v3/schemas"
)

type Gossip struct{ capnp.Struct }

// Gossip_TypeID is the unique identifier for the type Gossip.
const Gossip_TypeID = 0xfcef4b0e93332397

func NewGossip(s *capnp.Segment) (Gossip, error) {
	st, err := capnp.NewStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Gossip{st}, err
}

func NewRootGossip(s *capnp.Segment) (Gossip, error) {
	st, err := capnp.NewRootStruct(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1})
	return Gossip{st}, err
}

func ReadRootGossip(msg *capnp.Message) (Gossip, error) {
	root, err := msg.Root()
	return Gossip{root.Struct()}, err
}

func (s Gossip) String() string {
	str, _ := text.Marshal(0xfcef4b0e93332397, s.Struct)
	return str
}

func (s Gossip) Hop() uint64 {
	return s.Struct.Uint64(0)
}

func (s Gossip) SetHop(v uint64) {
	s.Struct.SetUint64(0, v)
}

func (s Gossip) Envelope() ([]byte, error) {
	p, err := s.Struct.Ptr(0)
	return []byte(p.Data()), err
}

func (s Gossip) HasEnvelope() bool {
	return s.Struct.HasPtr(0)
}

func (s Gossip) SetEnvelope(v []byte) error {
	return s.Struct.SetData(0, v)
}

// Gossip_List is a list of Gossip.
type Gossip_List struct{ capnp.List }

// NewGossip creates a new list of Gossip.
func NewGossip_List(s *capnp.Segment, sz int32) (Gossip_List, error) {
	l, err := capnp.NewCompositeList(s, capnp.ObjectSize{DataSize: 8, PointerCount: 1}, sz)
	return Gossip_List{l}, err
}

func (s Gossip_List) At(i int) Gossip { return Gossip{s.List.Struct(i)} }

func (s Gossip_List) Set(i int, v Gossip) error { return s.List.SetStruct(i, v.Struct) }

func (s Gossip_List) String() string {
	str, _ := text.MarshalList(0xfcef4b0e93332397, s.List)
	return str
}

// Gossip_Future is a wrapper for a Gossip promised by a client call.
type Gossip_Future struct{ *capnp.Future }

func (p Gossip_Future) Struct() (Gossip, error) {
	s, err := p.Future.Struct()
	return Gossip{s}, err
}

const schema_bbd81c151780f030 = "x\xda\x12\x88w`2d\xdd\xcf\xc8\xc0\x10(\xc2\xca" +
	"\xf6\x7f\xba\xb2\xf1d>\xef\xf7\x7f\x18\x02\xb9\x18\x19\xff" +
	"\x1b|h\x10\x17\x95\xb9\xb1\x9b\x81\x95\x91\x9d\x81A\xf0" +
	"h\x97\xe0Y\x10}\xb2\x9cA\xf7\x7fAj\x85^r" +
	"bA\x1ec\x81\x95{~qqf\x01\x03C\x00#" +
	"c \x073\x0b\x03\x03\x0b#\x03\x83\xa0\xa6\x12\x03C" +
	"\xa0\x0a3c\xa0\x01\x13##\xa3\x08#HL\xd7\x8b" +
	"\x81!P\x87\x991\xd0\x82\x89\x91=#\xbf\x80\x91\x93" +
	"\x81\x89\x91\x93\x81\xf1\x7fj^YjN~A*\x03" +
	"\x03\x03#/\x03\x13#/\x03# \x00\x00\xff\xffl" +
	"M \\"

func init() {
	schemas.Register(schema_bbd81c151780f030,
		0xfcef4b0e93332397)
}
